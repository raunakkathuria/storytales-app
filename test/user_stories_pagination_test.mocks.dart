// Mocks generated by Mockito 5.4.6 from annotations
// in storytales/test/user_stories_pagination_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:connectivity_plus/connectivity_plus.dart' as _i14;
import 'package:dio/dio.dart' as _i7;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i12;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:logging/logging.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:storytales/core/config/app_config.dart' as _i8;
import 'package:storytales/core/models/user_stories_response.dart' as _i9;
import 'package:storytales/core/services/api/user_api_client.dart' as _i17;
import 'package:storytales/core/services/connectivity/connectivity_service.dart'
    as _i13;
import 'package:storytales/core/services/device/device_service.dart' as _i16;
import 'package:storytales/core/services/logging/logging_service.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_5 extends _i1.SmartFake implements _i7.Dio {
  _FakeDio_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppConfig_6 extends _i1.SmartFake implements _i8.AppConfig {
  _FakeAppConfig_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserStoriesResponse_7 extends _i1.SmartFake
    implements _i9.UserStoriesResponse {
  _FakeUserStoriesResponse_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLogger_8 extends _i1.SmartFake implements _i10.Logger {
  _FakeLogger_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i7.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_0(this, Invocation.getter(#options)),
          )
          as _i2.BaseOptions);

  @override
  _i3.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_1(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i3.HttpClientAdapter);

  @override
  _i4.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_2(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i4.Transformer);

  @override
  _i5.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_3(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i5.Interceptors);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i11.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_4<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<dynamic>>);

  @override
  _i11.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i2.FileAccessMode? fileAccessMode = _i2.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i11.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_4<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<dynamic>>);

  @override
  _i11.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i11.Future<_i6.Response<T>>.value(
              _FakeResponse_4<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i11.Future<_i6.Response<T>>);

  @override
  _i7.Dio clone({
    _i2.BaseOptions? options,
    _i5.Interceptors? interceptors,
    _i3.HttpClientAdapter? httpClientAdapter,
    _i4.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_5(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i7.Dio);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i13.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Stream<_i14.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i11.Stream<_i14.ConnectivityResult>.empty(),
          )
          as _i11.Stream<_i14.ConnectivityResult>);

  @override
  _i11.Future<bool> isConnected() =>
      (super.noSuchMethod(
            Invocation.method(#isConnected, []),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<bool> isMobile() =>
      (super.noSuchMethod(
            Invocation.method(#isMobile, []),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<bool> isWifi() =>
      (super.noSuchMethod(
            Invocation.method(#isWifi, []),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);
}

/// A class which mocks [AppConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppConfig extends _i1.Mock implements _i8.AppConfig {
  MockAppConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiBaseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#apiBaseUrl),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#apiBaseUrl),
            ),
          )
          as String);

  @override
  int get apiTimeoutSeconds =>
      (super.noSuchMethod(Invocation.getter(#apiTimeoutSeconds), returnValue: 0)
          as int);

  @override
  bool get useMockData =>
      (super.noSuchMethod(Invocation.getter(#useMockData), returnValue: false)
          as bool);

  @override
  String get environment =>
      (super.noSuchMethod(
            Invocation.getter(#environment),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#environment),
            ),
          )
          as String);

  @override
  String get apiKey =>
      (super.noSuchMethod(
            Invocation.getter(#apiKey),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#apiKey),
            ),
          )
          as String);

  @override
  _i8.AppConfig copyWith({
    String? apiBaseUrl,
    int? apiTimeoutSeconds,
    bool? useMockData,
    String? environment,
    String? apiKey,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #apiBaseUrl: apiBaseUrl,
              #apiTimeoutSeconds: apiTimeoutSeconds,
              #useMockData: useMockData,
              #environment: environment,
              #apiKey: apiKey,
            }),
            returnValue: _FakeAppConfig_6(
              this,
              Invocation.method(#copyWith, [], {
                #apiBaseUrl: apiBaseUrl,
                #apiTimeoutSeconds: apiTimeoutSeconds,
                #useMockData: useMockData,
                #environment: environment,
                #apiKey: apiKey,
              }),
            ),
          )
          as _i8.AppConfig);
}

/// A class which mocks [DeviceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceService extends _i1.Mock implements _i16.DeviceService {
  MockDeviceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<String> getDeviceId() =>
      (super.noSuchMethod(
            Invocation.method(#getDeviceId, []),
            returnValue: _i11.Future<String>.value(
              _i15.dummyValue<String>(
                this,
                Invocation.method(#getDeviceId, []),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<Map<String, dynamic>> getDeviceInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getDeviceInfo, []),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<void> clearDeviceId() =>
      (super.noSuchMethod(
            Invocation.method(#clearDeviceId, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);
}

/// A class which mocks [UserApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApiClient extends _i1.Mock implements _i17.UserApiClient {
  MockUserApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<Map<String, dynamic>> createUser({required String? deviceId}) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [], {#deviceId: deviceId}),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> getUserProfile({required int? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, [], {#userId: userId}),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> updateUserProfile({
    required int? userId,
    required String? displayName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [], {
              #userId: userId,
              #displayName: displayName,
            }),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> startSubscription({
    required int? userId,
    required String? email,
    required String? displayName,
    required String? plan,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startSubscription, [], {
              #userId: userId,
              #email: email,
              #displayName: displayName,
              #plan: plan,
            }),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> verifySubscription({
    required int? userId,
    required String? otpCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifySubscription, [], {
              #userId: userId,
              #otpCode: otpCode,
            }),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> getUserByDevice({
    required String? deviceId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserByDevice, [], {#deviceId: deviceId}),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<_i9.UserStoriesResponse> getUserStories({
    required int? userId,
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserStories, [], {
              #userId: userId,
              #page: page,
              #limit: limit,
            }),
            returnValue: _i11.Future<_i9.UserStoriesResponse>.value(
              _FakeUserStoriesResponse_7(
                this,
                Invocation.method(#getUserStories, [], {
                  #userId: userId,
                  #page: page,
                  #limit: limit,
                }),
              ),
            ),
          )
          as _i11.Future<_i9.UserStoriesResponse>);

  @override
  _i11.Future<Map<String, dynamic>> registerUser({
    required int? userId,
    required String? email,
    required String? displayName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#registerUser, [], {
              #userId: userId,
              #email: email,
              #displayName: displayName,
            }),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> verifyRegistration({
    required int? userId,
    required String? otpCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyRegistration, [], {
              #userId: userId,
              #otpCode: otpCode,
            }),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> loginUser({required String? email}) =>
      (super.noSuchMethod(
            Invocation.method(#loginUser, [], {#email: email}),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);

  @override
  _i11.Future<Map<String, dynamic>> verifyLogin({required String? otpCode}) =>
      (super.noSuchMethod(
            Invocation.method(#verifyLogin, [], {#otpCode: otpCode}),
            returnValue: _i11.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i11.Future<Map<String, dynamic>>);
}

/// A class which mocks [LoggingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggingService extends _i1.Mock implements _i18.LoggingService {
  MockLoggingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void init() => super.noSuchMethod(
    Invocation.method(#init, []),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Logger getLogger(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#getLogger, [name]),
            returnValue: _FakeLogger_8(
              this,
              Invocation.method(#getLogger, [name]),
            ),
          )
          as _i10.Logger);

  @override
  void debug(String? message, [Object? error, StackTrace? stackTrace]) =>
      super.noSuchMethod(
        Invocation.method(#debug, [message, error, stackTrace]),
        returnValueForMissingStub: null,
      );

  @override
  void info(String? message, [Object? error, StackTrace? stackTrace]) =>
      super.noSuchMethod(
        Invocation.method(#info, [message, error, stackTrace]),
        returnValueForMissingStub: null,
      );

  @override
  void warning(String? message, [Object? error, StackTrace? stackTrace]) =>
      super.noSuchMethod(
        Invocation.method(#warning, [message, error, stackTrace]),
        returnValueForMissingStub: null,
      );

  @override
  void error(String? message, [Object? error, StackTrace? stackTrace]) =>
      super.noSuchMethod(
        Invocation.method(#error, [message, error, stackTrace]),
        returnValueForMissingStub: null,
      );
}
