// Mocks generated by Mockito 5.4.6 from annotations
// in storytales/test/pregenerated_stories_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:sqflite/sqflite.dart' as _i2;
import 'package:storytales/core/services/local_storage/database_service.dart'
    as _i4;
import 'package:storytales/features/story_generation/data/datasources/story_api_client.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i4.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i3.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i3.Future<_i2.Database>);

  @override
  _i3.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> insert(String? table, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#insert, [table, data]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> insertBatch(
    String? table,
    List<Map<String, dynamic>>? dataList,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertBatch, [table, dataList]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> update(
    String? table,
    Map<String, dynamic>? data,
    String? whereClause,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table, data, whereClause]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> delete(String? table, String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table, id]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<Map<String, dynamic>>> query(
    String? table, {
    String? where,
    List<dynamic>? whereArgs,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #query,
              [table],
              {
                #where: where,
                #whereArgs: whereArgs,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
              },
            ),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> rawQuery(
    String? sql,
    List<dynamic>? arguments,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#rawQuery, [sql, arguments]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<int> rawExecute(String? sql, List<dynamic>? arguments) =>
      (super.noSuchMethod(
            Invocation.method(#rawExecute, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<T> transaction<T>(
    _i3.Future<T> Function(_i2.Transaction)? action,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transaction, [action]),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#transaction, [action]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(#transaction, [action]),
                ),
          )
          as _i3.Future<T>);
}

/// A class which mocks [StoryApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoryApiClient extends _i1.Mock implements _i6.StoryApiClient {
  MockStoryApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> generateStory({
    required String? prompt,
    String? ageRange,
    String? theme,
    String? genre,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateStory, [], {
              #prompt: prompt,
              #ageRange: ageRange,
              #theme: theme,
              #genre: genre,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> generateSampleStory({
    String? prompt,
    String? ageRange,
    String? theme,
    String? genre,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateSampleStory, [], {
              #prompt: prompt,
              #ageRange: ageRange,
              #theme: theme,
              #genre: genre,
            }),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> fetchPreGeneratedStories() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPreGeneratedStories, []),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<Map<String, dynamic>> fetchStoryById(String? storyId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchStoryById, [storyId]),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);
}
